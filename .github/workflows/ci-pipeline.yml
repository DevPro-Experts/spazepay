name: CI Pipeline for Develop

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ndifrekealexander
          POSTGRES_PASSWORD: false
          POSTGRES_DB: test_spaze_pay_savings_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug trigger info
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Repository: ${{ github.repository }}"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Configure test properties
        run: |
          mkdir -p src/test/resources
          cat > src/test/resources/application-test.yml <<EOF
          spring:
            datasource:
              url: jdbc:postgresql://localhost:5432/test_spaze_pay_savings_db
              username: ndifrekealexander
              password: 
              driver-class-name: org.postgresql.Driver
            jpa:
              hibernate:
                ddl-auto: create-drop
              show-sql: true
            profiles:
              active: test
          EOF

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U ndifrekealexander -d test_spaze_pay_savings_db; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting... ($i/30)"
            sleep 2
          done

      - name: Build and test with debug
        run: mvn -B clean test -Ptest -e -X

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-develop
          path: target/surefire-reports/